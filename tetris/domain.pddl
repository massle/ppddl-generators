(define (domain tetris)
    (:requirements :typing :equality :negative-preconditions :action-costs :probabilistic-effects)

    (:types Hposition Vposition round tile)

    (:constants
        I L MirroredL Square S MirroredS T - tile
    )

    (:predicates
        (ABOVE ?i ?j - Vposition)
        (LEFT ?i ?j - Hposition)
        (NEXT ?i ?j - round)
        (blocked ?x - Hposition ?y - Vposition)
        (nextTile ?t - tile)
        (currentRound ?r - round)
        (playerMoved)
    )

    (:functions (total-cost) - number)

    (:action startNextRound
        :parameters (?r0 ?r1 - round)
        :precondition (and
            (playerMoved)
            (currentRound ?r0)
            (NEXT ?r0 ?r1)
        )
        :effect (and
            (increase (total-cost) 0)
            (not (playerMoved))
            (not (currentRound ?r0))
            (currentRound ?r1)
            (probabilistic
                1/7 (nextTile I)
                1/7 (nextTile L)
                1/7 (nextTile MirroredL)
                1/7 (nextTile Square)
                1/7 (nextTile S)
                1/7 (nextTile MirroredS)
                1/7 (nextTile T)
            )
        )
    )

    (:action redrawTile
        :parameters (?t - tile)
        :precondition (and (nextTile ?t))
        :effect (and
            (increase (total-cost) 10)
            (not (nextTile ?t))
            (probabilistic
                1/7 (nextTile I)
                1/7 (nextTile L)
                1/7 (nextTile MirroredL)
                1/7 (nextTile Square)
                1/7 (nextTile S)
                1/7 (nextTile MirroredS)
                1/7 (nextTile T)
            )
        )
    )

    (:action place_I_Vertical
        :parameters (?x - Hposition ?y0 ?y1 ?y2 ?y3 - Vposition)
        :precondition (and
            (nextTile I)
            (ABOVE ?y0 ?y1)
            (ABOVE ?y1 ?y2)
            (ABOVE ?y2 ?y3)
            (not (blocked ?x ?y0))
            (not (blocked ?x ?y1))
            (not (blocked ?x ?y2))
            (not (blocked ?x ?y3))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile I))
            (playerMoved)
            (blocked ?x ?y0)
            (blocked ?x ?y1)
            (blocked ?x ?y2)
            (blocked ?x ?y3)
        )
    )

    (:action place_I_Horizontal
        :parameters (?x0 ?x1 ?x2 ?x3 - Hposition ?y - Vposition)
        :precondition (and
            (nextTile I)
            (LEFT ?x0 ?x1)
            (LEFT ?x1 ?x2)
            (LEFT ?x2 ?x3)
            (not (blocked ?x0 ?y))
            (not (blocked ?x1 ?y))
            (not (blocked ?x2 ?y))
            (not (blocked ?x3 ?y))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile I))
            (playerMoved)
            (blocked ?x0 ?y)
            (blocked ?x1 ?y)
            (blocked ?x2 ?y)
            (blocked ?x3 ?y)
        )
    )

    (:action place_L_0
        :parameters (?x0 ?x1 - Hposition ?y0 ?y1 ?y2 - Vposition)
        :precondition (and
            (nextTile L)
            (ABOVE ?y0 ?y1)
            (ABOVE ?y1 ?y2)
            (LEFT ?x0 ?x1)
            (not (blocked ?x0 ?y0))
            (not (blocked ?x0 ?y1))
            (not (blocked ?x0 ?y2))
            (not (blocked ?x1 ?y2))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile L))
            (playerMoved)
            (blocked ?x0 ?y0)
            (blocked ?x0 ?y1)
            (blocked ?x0 ?y2)
            (blocked ?x1 ?y2)
        )
    )

    (:action place_L_90
        :parameters (?x0 ?x1 ?x2 - Hposition ?y0 ?y1 - Vposition)
        :precondition (and
            (nextTile L)
            (ABOVE ?y0 ?y1)
            (LEFT ?x0 ?x1)
            (LEFT ?x1 ?x2)
            (not (blocked ?x2 ?y0))
            (not (blocked ?x0 ?y1))
            (not (blocked ?x1 ?y1))
            (not (blocked ?x2 ?y1))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile L))
            (playerMoved)
            (blocked ?x2 ?y0)
            (blocked ?x0 ?y1)
            (blocked ?x1 ?y1)
            (blocked ?x2 ?y1)
        )
    )

    (:action place_L_180
        :parameters (?x0 ?x1 - Hposition ?y0 ?y1 ?y2 - Vposition)
        :precondition (and
            (nextTile L)
            (ABOVE ?y0 ?y1)
            (ABOVE ?y1 ?y2)
            (LEFT ?x0 ?x1)
            (not (blocked ?x0 ?y0))
            (not (blocked ?x1 ?y0))
            (not (blocked ?x1 ?y1))
            (not (blocked ?x1 ?y2))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile L))
            (playerMoved)
            (blocked ?x0 ?y0)
            (blocked ?x1 ?y0)
            (blocked ?x1 ?y1)
            (blocked ?x1 ?y2)
        )
    )

    (:action place_L_270
        :parameters (?x0 ?x1 ?x2 - Hposition ?y0 ?y1 - Vposition)
        :precondition (and
            (nextTile L)
            (ABOVE ?y0 ?y1)
            (LEFT ?x0 ?x1)
            (LEFT ?x1 ?x2)
            (not (blocked ?x0 ?y0))
            (not (blocked ?x0 ?y1))
            (not (blocked ?x1 ?y0))
            (not (blocked ?x2 ?y0))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile L))
            (playerMoved)
            (blocked ?x0 ?y0)
            (blocked ?x0 ?y1)
            (blocked ?x1 ?y0)
            (blocked ?x2 ?y0)
        )
    )

    (:action place_Square
        :parameters (?x0 ?x1 - Hposition ?y0 ?y1 - Vposition)
        :precondition (and
            (nextTile Square)
            (ABOVE ?y0 ?y1)
            (LEFT ?x0 ?x1)
            (not (blocked ?x0 ?y0))
            (not (blocked ?x0 ?y1))
            (not (blocked ?x1 ?y0))
            (not (blocked ?x1 ?y1))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile Square))
            (playerMoved)
            (blocked ?x0 ?y0)
            (blocked ?x0 ?y1)
            (blocked ?x1 ?y0)
            (blocked ?x1 ?y1)
        )
    )

    (:action place_MirroredL_0
        :parameters (?x0 ?x1 - Hposition ?y0 ?y1 ?y2 - Vposition)
        :precondition (and
            (nextTile MirroredL)
            (ABOVE ?y0 ?y1)
            (ABOVE ?y1 ?y2)
            (LEFT ?x0 ?x1)
            (not (blocked ?x0 ?y2))
            (not (blocked ?x1 ?y0))
            (not (blocked ?x1 ?y1))
            (not (blocked ?x1 ?y2))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile MirroredL))
            (playerMoved)
            (blocked ?x0 ?y2)
            (blocked ?x1 ?y0)
            (blocked ?x1 ?y1)
            (blocked ?x1 ?y2)
        )
    )

    (:action place_MirroredL_90
        :parameters (?x0 ?x1 ?x2 - Hposition ?y0 ?y1 - Vposition)
        :precondition (and
            (nextTile MirroredL)
            (ABOVE ?y0 ?y1)
            (LEFT ?x0 ?x1)
            (LEFT ?x1 ?x2)
            (not (blocked ?x0 ?y0))
            (not (blocked ?x0 ?y1))
            (not (blocked ?x1 ?y1))
            (not (blocked ?x2 ?y1))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile MirroredL))
            (playerMoved)
            (blocked ?x0 ?y0)
            (blocked ?x0 ?y1)
            (blocked ?x1 ?y1)
            (blocked ?x2 ?y1)
        )
    )

    (:action place_MirroredL_180
        :parameters (?x0 ?x1 - Hposition ?y0 ?y1 ?y2 - Vposition)
        :precondition (and
            (nextTile MirroredL)
            (ABOVE ?y0 ?y1)
            (ABOVE ?y1 ?y2)
            (LEFT ?x0 ?x1)
            (not (blocked ?x0 ?y0))
            (not (blocked ?x1 ?y0))
            (not (blocked ?x0 ?y1))
            (not (blocked ?x0 ?y2))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile MirroredL))
            (playerMoved)
            (blocked ?x0 ?y0)
            (blocked ?x1 ?y0)
            (blocked ?x0 ?y1)
            (blocked ?x0 ?y2)
        )
    )

    (:action place_MirroredL_270
        :parameters (?x0 ?x1 ?x2 - Hposition ?y0 ?y1 - Vposition)
        :precondition (and
            (nextTile MirroredL)
            (ABOVE ?y0 ?y1)
            (LEFT ?x0 ?x1)
            (LEFT ?x1 ?x2)
            (not (blocked ?x0 ?y0))
            (not (blocked ?x1 ?y0))
            (not (blocked ?x2 ?y0))
            (not (blocked ?x2 ?y1))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile MirroredL))
            (playerMoved)
            (blocked ?x0 ?y0)
            (blocked ?x1 ?y0)
            (blocked ?x2 ?y0)
            (blocked ?x2 ?y1)
        )
    )

    (:action place_S
        :parameters (?x0 ?x1 ?x2 - Hposition ?y0 ?y1 - Vposition)
        :precondition (and
            (nextTile S)
            (ABOVE ?y0 ?y1)
            (LEFT ?x0 ?x1)
            (LEFT ?x1 ?x2)
            (not (blocked ?x0 ?y1))
            (not (blocked ?x1 ?y1))
            (not (blocked ?x1 ?y0))
            (not (blocked ?x2 ?y0))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile S))
            (playerMoved)
            (blocked ?x0 ?y1)
            (blocked ?x1 ?y1)
            (blocked ?x1 ?y0)
            (blocked ?x2 ?y0)
        )
    )

    (:action place_S_Flipped
        :parameters (?x0 ?x1 - Hposition ?y0 ?y1 ?y2 - Vposition)
        :precondition (and
            (nextTile S)
            (ABOVE ?y0 ?y1)
            (ABOVE ?y1 ?y2)
            (LEFT ?x0 ?x1)
            (not (blocked ?x0 ?y0))
            (not (blocked ?x0 ?y1))
            (not (blocked ?x1 ?y1))
            (not (blocked ?x1 ?y2))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile S))
            (playerMoved)
            (blocked ?x0 ?y0)
            (blocked ?x0 ?y1)
            (blocked ?x1 ?y1)
            (blocked ?x1 ?y2)
        )
    )

    (:action place_MirroredS
        :parameters (?x0 ?x1 ?x2 - Hposition ?y0 ?y1 - Vposition)
        :precondition (and
            (nextTile MirroredS)
            (ABOVE ?y0 ?y1)
            (LEFT ?x0 ?x1)
            (LEFT ?x1 ?x2)
            (not (blocked ?x0 ?y0))
            (not (blocked ?x1 ?y0))
            (not (blocked ?x1 ?y1))
            (not (blocked ?x2 ?y1))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile MirroredS))
            (playerMoved)
            (blocked ?x0 ?y0)
            (blocked ?x1 ?y0)
            (blocked ?x1 ?y1)
            (blocked ?x2 ?y1)
        )
    )

    (:action place_MirroredS_Flipped
        :parameters (?x0 ?x1 - Hposition ?y0 ?y1 ?y2 - Vposition)
        :precondition (and
            (nextTile MirroredS)
            (ABOVE ?y0 ?y1)
            (ABOVE ?y1 ?y2)
            (LEFT ?x0 ?x1)
            (not (blocked ?x1 ?y0))
            (not (blocked ?x0 ?y1))
            (not (blocked ?x0 ?y2))
            (not (blocked ?x1 ?y1))
        )
        :effect (and
            (increase (total-cost) 1)
            (not (nextTile MirroredS))
            (playerMoved)
            (blocked ?x1 ?y0)
            (blocked ?x0 ?y1)
            (blocked ?x0 ?y2)
            (blocked ?x1 ?y1)
        )
    )

 )
